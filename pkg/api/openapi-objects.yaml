openapi: 3.0.0
info:
  title: Car Catalog API
  description: REST API for managing car catalog
  version: 1.0.0
# servers:
#   - url: https://example.com/api/v1
paths:
  /cars:
    get:
      summary: Get cars with filtering and pagination
      description: Retrieves a list of cars with optional filtering and pagination.
      parameters:
        - in: query
          name: mark
          schema:
            type: string
          description: Filter by car mark
        - in: query
          name: model
          schema:
            type: string
          description: Filter by car model
        - in: query
          name: regNums
          schema:
            type: string
          description: Filter by car regNums
        - in: query
          name: owner
          schema:
            type: string
          description: Filter by car owner
        - in: query
          name: color
          schema:
            type: string
          description: Filter by car color
        - in: query
          name: year
          schema:
            type: string
          description: Filter by car year
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items to return per page
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number to retrieve
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      summary: Add new cars
      description: Add new cars to the catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Successfully added cars
        '400':
          description: Invalid request body
  /cars/{id}:
    delete:
      summary: Delete a car by ID
      description: Delete a car from the catalog by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the car to delete
      responses:
        '204':
          description: Successfully deleted the car
    put:
      summary: Update a car by ID
      description: Update one or more fields of a car by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the car to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mark:
                  type: string
                  description: New mark of the car
                model:
                  type: string
                  description: New model of the car
                color:
                  type: string
                  description: New color of the car
                owner:
                  type: string
                  description: New owner of the car
      responses:
        '200':
          description: Successfully updated the car
        '400':
          description: Invalid request body
components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the car
        mark:
          type: string
          description: The mark of the car
        model:
          type: string
          description: The model of the car
        regNums:
          type: string
          description: The regNum of the car
        owner:
          type: string
          description: The owner of the car
        color:
          type: string
          description: The color of the car
        year:
          type: integer
          description: The year of the car  
        created_at:
          type: string
          description: The created_at of the car
        updated_at:
          type: string
          description: The updated_at of the car
